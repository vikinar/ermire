webpackHotUpdate("static\\development\\pages\\index.js",{

/***/ "./src/containers/HomePage/style.js":
/*!******************************************!*\
  !*** ./src/containers/HomePage/style.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {var posterBG = 'posterBg';\nvar chat = 'chat';\nvar chatLeft = 'chatLeft';\nvar poster = 'poster';\nvar sky = 'sky';\nvar tree = 'tree';\nvar opacity = 'opacity';\nvar fade = 'fade';\nvar style = new String(\".home.jsx-3519512553{margin:0;padding:0;grid-column:span 11;}.header.jsx-3519512553{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;height:100vh;width:100%;background:transparent;color:darkblue;-webkit-transition:ease-out .5s;transition:ease-out .5s;}.header__order.jsx-3519512553{position:relative;padding:2rem 1rem;color:white;width:33%;text-align:center;cursor:pointer;overflow:hidden;z-index:1;-webkit-transition:0.75s cubic-bezier(0.7,0.2,0.1,1);transition:0.75s cubic-bezier(0.7,0.2,0.1,1);}.header__order.jsx-3519512553:hover{color:transparent;}.header__order.jsx-3519512553:hover::after{-webkit-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%);-webkit-transition:0.75s cubic-bezier(0.7,0.2,0.1,1);transition:0.75s cubic-bezier(0.7,0.2,0.1,1);}.header__order.jsx-3519512553:hover::before{-webkit-transform:translateX(0%);-ms-transform:translateX(0%);transform:translateX(0%);-webkit-transition:0.75s cubic-bezier(0.7,0.2,0.1,1);transition:0.75s cubic-bezier(0.7,0.2,0.1,1);}.header__order.jsx-3519512553::after{content:'';position:absolute;width:100%;height:100%;top:0;left:0;background:darkblue;z-index:-1;-webkit-transform:translate(0);-ms-transform:translate(0);transform:translate(0);-webkit-transition:0.75s cubic-bezier(0.7,0.2,0.1,1);transition:0.75s cubic-bezier(0.7,0.2,0.1,1);}.header__order.jsx-3519512553::before{content:attr(data-text);position:absolute;color:darkblue;background:transparent;font-size:4rem;font-weight:900;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;vertical-align:center;top:1.5rem;left:0;z-index:1;-webkit-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%);-webkit-transition:0.75s cubic-bezier(0.7,0.2,0.1,1);transition:0.75s cubic-bezier(0.7,0.2,0.1,1);}.header__content.jsx-3519512553{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;height:100%;}.header-title--cont.jsx-3519512553{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;width:50%;-webkit-transition:ease-out .5s;transition:ease-out .5s;color:black;}.header-title--cont.jsx-3519512553 p.jsx-3519512553{width:90%;line-height:2.8rem;font-size:2rem;margin:1rem 0;}.header-title--cont.jsx-3519512553 .divider.jsx-3519512553{display:block;height:.5rem;width:30%;background:darkblue;margin:.5rem 0;}.header-title.jsx-3519512553{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;width:90%;font-size:6rem;font-weight:700;position:relative;-webkit-transition:ease-out .5s;transition:ease-out .5s;margin:0;}.header__poster.jsx-3519512553{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;position:relative;width:50%;height:100%;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.overview.jsx-3519512553{height:100vh;width:100%;background:#eee;display:grid;grid-template-columns:repeat(12,1fr);grid-template-rows:repeat(12,1fr);grid-column-gap:1em;grid-row-gap:1em;}.logo-container.jsx-3519512553{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-basis:content;-ms-flex-preferred-size:content;flex-basis:content;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.logo-container-inner.jsx-3519512553{margin:1rem;}.logo-desc.jsx-3519512553{margin:0;}h1.jsx-3519512553{margin:0;font-size:1.8rem;font-weight:600;}.fp-tableCell{display:-webkit-box !important;display:-webkit-flex !important;display:-ms-flexbox !important;display:flex !important;}.poster{-webkit-transition:cubic-bezier(0.2,0.5,0.75,1);transition:cubic-bezier(0.2,0.5,0.75,1);-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-animation:poster-jsx-3519512553 1s forwards cubic-bezier(0.7,0.2,0.1,1);animation:poster-jsx-3519512553 1s forwards cubic-bezier(0.7,0.2,0.1,1);}@-webkit-keyframes \".concat(poster, \"-jsx-3519512553{from{opacity:0;-webkit-transform:translateY(10%);-ms-transform:translateY(10%);transform:translateY(10%);}to{opacity:1;-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%);}}@keyframes \").concat(poster, \"-jsx-3519512553{from{opacity:0;-webkit-transform:translateY(10%);-ms-transform:translateY(10%);transform:translateY(10%);}to{opacity:1;-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%);}}.posterBg{position:absolute;top:20rem;left:-5rem;-webkit-transition:cubic-bezier(0.2,0.5,0.75,1);transition:cubic-bezier(0.2,0.5,0.75,1);-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-animation:poster-jsx-3519512553 1s forwards cubic-bezier(0.7,0.2,0.1,1);animation:poster-jsx-3519512553 1s forwards cubic-bezier(0.7,0.2,0.1,1);}@-webkit-keyframes \").concat(poster, \"-jsx-3519512553{from{opacity:0;-webkit-transform:translateY(10%);-ms-transform:translateY(10%);transform:translateY(10%);}to{opacity:1;-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%);}}@keyframes \").concat(poster, \"-jsx-3519512553{from{opacity:0;-webkit-transform:translateY(10%);-ms-transform:translateY(10%);transform:translateY(10%);}to{opacity:1;-webkit-transform:translateY(0%);-ms-transform:translateY(0%);transform:translateY(0%);}}.chat{-webkit-transform-origin:center;-ms-transform-origin:center;transform-origin:center;-webkit-backface-visibility:hidden;backface-visibility:hidden;}@-webkit-keyframes \").concat(chat, \"-jsx-3519512553{from{opacity:0;-webkit-transform:translateX(25%) scale(0);-ms-transform:translateX(25%) scale(0);transform:translateX(25%) scale(0);}to{opacity:1;-webkit-transform:translateX(0%) scale(1);-ms-transform:translateX(0%) scale(1);transform:translateX(0%) scale(1);}}@keyframes \").concat(chat, \"-jsx-3519512553{from{opacity:0;-webkit-transform:translateX(25%) scale(0);-ms-transform:translateX(25%) scale(0);transform:translateX(25%) scale(0);}to{opacity:1;-webkit-transform:translateX(0%) scale(1);-ms-transform:translateX(0%) scale(1);transform:translateX(0%) scale(1);}}@-webkit-keyframes \").concat(chatLeft, \"-jsx-3519512553{from{opacity:0;-webkit-transform:translateX(-25%) scale(0);-ms-transform:translateX(-25%) scale(0);transform:translateX(-25%) scale(0);}to{opacity:1;-webkit-transform:translateX(0%) scale(1);-ms-transform:translateX(0%) scale(1);transform:translateX(0%) scale(1);}}@keyframes \").concat(chatLeft, \"-jsx-3519512553{from{opacity:0;-webkit-transform:translateX(-25%) scale(0);-ms-transform:translateX(-25%) scale(0);transform:translateX(-25%) scale(0);}to{opacity:1;-webkit-transform:translateX(0%) scale(1);-ms-transform:translateX(0%) scale(1);transform:translateX(0%) scale(1);}}#a31b832d-1e0d-43ba-bec9-5cfdb815a07f{-webkit-filter:shadow(1rem 1rem 2rem rgba(0,0,0,0.5));filter:shadow(1rem 1rem 2rem rgba(0,0,0,0.5));-webkit-transform-origin:center;-ms-transform-origin:center;transform-origin:center;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-animation:chat-jsx-3519512553 0.75s 0.5s backwards cubic-bezier(0.2,0.5,0.75,1.5);animation:chat-jsx-3519512553 0.75s 0.5s backwards cubic-bezier(0.2,0.5,0.75,1.5);}#eaba0afd-ea5a-4b07-ba58-47cb2f088590{-webkit-transform-origin:center;-ms-transform-origin:center;transform-origin:center;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-animation:chatLeft-jsx-3519512553 0.75s 1s backwards cubic-bezier(0.2,0.5,0.75,1.5);animation:chatLeft-jsx-3519512553 0.75s 1s backwards cubic-bezier(0.2,0.5,0.75,1.5);}#e19c349d-f602-4dbb-bd7e-4a25eb582d83{-webkit-transform-origin:center;-ms-transform-origin:center;transform-origin:center;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-animation:chat-jsx-3519512553 0.75s 1.5s backwards cubic-bezier(0.2,0.5,0.75,1.5);animation:chat-jsx-3519512553 0.75s 1.5s backwards cubic-bezier(0.2,0.5,0.75,1.5);}#poster-bg{display:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-animation:posterBg-jsx-3519512553 0.5s backwards cubic-bezier(0.2,0.5,0.75,1);animation:posterBg-jsx-3519512553 0.5s backwards cubic-bezier(0.2,0.5,0.75,1);}@-webkit-keyframes \").concat(posterBG, \"-jsx-3519512553{from{opacity:0;}to{opacity:1;}}@keyframes \").concat(posterBG, \"-jsx-3519512553{from{opacity:0;}to{opacity:1;}}.order.jsx-3519512553{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.section-c.jsx-3519512553{background:white;height:100%;}.brief.jsx-3519512553{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;height:100%;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background:white;width:100%;}.brief-block.jsx-3519512553{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;width:50%;}.brief__title.jsx-3519512553 h1.jsx-3519512553{font-size:5.4rem;font-weight:400;margin-bottom:2rem;}.brief__form.jsx-3519512553{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;width:100%;}.brief__form__input.jsx-3519512553{margin-bottom:1rem;font-size:1.6rem;padding:1.5rem;border:none;outline:none;background:transparent;border-bottom:1px solid rgba(0,0,139,0.5);-webkit-transition:all .5s ease-out;transition:all .5s ease-out;resize:none;font-family:'canada-type-gibson',Monospaced,sans-serif;}.brief__form__input.jsx-3519512553:focus{border-bottom:1px solid darkblue;-webkit-transition:all .5s ease-out;transition:all .5s ease-out;}.brief__form__submit.jsx-3519512553{border:none;background:darkblue;color:white;padding:1rem;font-size:1.6rem;outline:none;mso-highlight:transparent;cursor:pointer;}.scroll-nav.jsx-3519512553{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;height:100vh;margin:0;-webkit-backface-visibility:hidden;backface-visibility:hidden;}.scroll-nav.jsx-3519512553 p.jsx-3519512553{position:relative;-webkit-writing-mode:vertical-lr;-ms-writing-mode:tb;writing-mode:vertical-lr;margin:0;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-animation:fade-jsx-3519512553 .5s 2s backwards ease-in-out;animation:fade-jsx-3519512553 .5s 2s backwards ease-in-out;}.scroll-nav.jsx-3519512553 p.jsx-3519512553::after{position:absolute;content:'';width:.2rem;height:40rem;background:darkblue;left:50%;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-transform:translate(-50%,1rem);-ms-transform:translate(-50%,1rem);transform:translate(-50%,1rem);-webkit-animation:scroll-jsx-3519512553 1.5s 2s infinite alternate backwards ease-in-out;animation:scroll-jsx-3519512553 1.5s 2s infinite alternate backwards ease-in-out;}@-webkit-keyframes scroll-jsx-3519512553{from{height:20rem;}to{height:40rem;}}@keyframes scroll-jsx-3519512553{from{height:20rem;}to{height:40rem;}}@-webkit-keyframes \").concat(sky, \"-jsx-3519512553{from{-webkit-transform:translate(20%,-30%);-ms-transform:translate(20%,-30%);transform:translate(20%,-30%);}to{-webkit-transform:translate(0%,-30%);-ms-transform:translate(0%,-30%);transform:translate(0%,-30%);}}@keyframes \").concat(sky, \"-jsx-3519512553{from{-webkit-transform:translate(20%,-30%);-ms-transform:translate(20%,-30%);transform:translate(20%,-30%);}to{-webkit-transform:translate(0%,-30%);-ms-transform:translate(0%,-30%);transform:translate(0%,-30%);}}@-webkit-keyframes opacity-jsx-3519512553{from{opacity:1;-webkit-transform:translateY(25%);-ms-transform:translateY(25%);transform:translateY(25%);}to{opacity:0;-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);}}@keyframes opacity-jsx-3519512553{from{opacity:1;-webkit-transform:translateY(25%);-ms-transform:translateY(25%);transform:translateY(25%);}to{opacity:0;-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);}}@-webkit-keyframes fade-jsx-3519512553{from{opacity:0;}to{opacity:1;}}@keyframes fade-jsx-3519512553{from{opacity:0;}to{opacity:1;}}.cls-1{-webkit-animation:sky-jsx-3519512553 5s .5s infinite alternate forwards ease-in-out;animation:sky-jsx-3519512553 5s .5s infinite alternate forwards ease-in-out;}.opacity.jsx-3519512553{opacity:1;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-animation:opacity-jsx-3519512553 0.75s backwards cubic-bezier(0.2,0.5,0.3,1);animation:opacity-jsx-3519512553 0.75s backwards cubic-bezier(0.2,0.5,0.3,1);}.fade.jsx-3519512553{opacity:1;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-animation:fade-jsx-3519512553 0.75s backwards cubic-bezier(0.2,0.5,0.3,1);animation:fade-jsx-3519512553 0.75s backwards cubic-bezier(0.2,0.5,0.3,1);}.active.jsx-3519512553 .overview.jsx-3519512553{opacity:1;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-transition:0.5s cubic-bezier(0.2,0.5,0.3,1);transition:0.5s cubic-bezier(0.2,0.5,0.3,1);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\GBM\\\\\\\\Desktop\\\\\\\\ermire\\\\\\\\src\\\\\\\\containers\\\\\\\\HomePage\\\\\\\\style.js */\"));\nstyle.__hash = \"3519512553\";\n/* harmony default export */ __webpack_exports__[\"default\"] = (style);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/containers/HomePage/style.js\n");

/***/ })

})